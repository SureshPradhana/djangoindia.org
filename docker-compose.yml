services:
  postgres:
    image: postgres:alpine3.18
    container_name: postgres
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres", "-d", ${DATABASE_NAME} ]
      interval: 5s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    expose:
      - 5433
       
  djangoindia-frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.frontend.dev
      depends_on:
         - djangoindia-backend
    ports:
      - "3000:3000"

  djangoindia-backend: &djangoindia-backend
    build:
      context: ./backend
      dockerfile: Dockerfile.backend.dev
    container_name: djangoindia-backend
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app/backend
    env_file:
      - .env
    environment:
      - DJANGO_SETTINGS_MODULE=djangoindia.settings.local
  djangoindia-worker:
    <<: *djangoindia-backend
    container_name: djangoindia-worker
    command: celery -A backend/djangoindia worker -l info 
    ports: []
